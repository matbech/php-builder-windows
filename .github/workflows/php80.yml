name: 'Build PHP 8.0'
on:
  push:
  pull_request:
  repository_dispatch:
  schedule:
    - cron: '30 23 * * *'
jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip-build')"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            target: obj-x64
            config: nts-windows-vs16-x64
          - arch: x64
            target: obj-x64
            config: ts-windows-vs16-x64
          - arch: x64
            target: obj-x64
            config: nts-windows-vs16-x64-avx
          - arch: x86
            target: obj
            config: nts-windows-vs16-x86
          - arch: x86
            target: obj
            config: ts-windows-vs16-x86
    name: Build PHP
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@develop
        with:
          php-version: 7.4
          ini-values: disable_functions=mail
      - name: Test PHP
        run: php -v
      - name: Test php extensions
        run: php -m
      - name: Create Build Environment
        run: |
          New-Item -ItemType "directory" -Path C:\php-snap-build
          cd C:\php-snap-build
          git clone https://github.com/Microsoft/php-sdk-binary-tools.git php-sdk
          git clone https://github.com/php/web-rmtools.git rmtools
          New-Item -ItemType "directory" -Path C:\php-snap-build\${{ matrix.target }}
          New-Item -ItemType "directory" -Path C:\php-snap-build\snap_80\vs16\${{ matrix.arch }}
          Copy-Item -Path C:\php-snap-build\rmtools\bin\rmtools_setvars.bat-dist -Destination C:\php-snap-build\rmtools\bin\rmtools_setvars.bat
          Copy-Item -Path C:\php-snap-build\rmtools\data\config\credentials_ftps.php-dist -Destination C:\php-snap-build\rmtools\data\config\credentials_ftps.php
      - name: Add InstantClient
        run: |
          $oci_dir="C:/php-snap-build/deps_aux/oracle/${{ matrix.arch }}"
          New-Item -ItemType "directory" -Path $oci_dir
          $suffix = 'windows'
          if ('${{ matrix.arch }}' -eq 'x86') {
            $suffix = 'nt'
          }
          Invoke-WebRequest -UseBasicParsing -Uri https://download.oracle.com/otn_software/nt/instantclient/instantclient-basiclite-$suffix.zip -OutFile $oci_dir\instantclient.zip
          Invoke-WebRequest -UseBasicParsing -Uri https://download.oracle.com/otn_software/nt/instantclient/instantclient-sdk-$suffix.zip -OutFile $oci_dir\sdk.zip
          Expand-Archive -Path $oci_dir\instantclient.zip -DestinationPath $oci_dir -Force
          Expand-Archive -Path $oci_dir\sdk.zip -DestinationPath $oci_dir -Force
          Get-ChildItem $oci_dir | ?{ $_.PSIsContainer } | Rename-Item -NewName instantclient_12_1
      - name: Patch Tools
        run: |
          $git_location="C:\Program Files\Git\cmd\git.exe"
          $tar_location="C:\Program Files\Git\usr\bin\tar.exe"
          $task_location="C:\php-snap-build\rmtools\bin\snapshot_task.bat"
          $git_script_location="C:\php-snap-build\rmtools\include\Git.php"
          $config_location="C:\php-snap-build\rmtools\data\config\branch\${{ matrix.arch }}\php80.ini"
          ((Get-Content -path $git_script_location -Raw) -replace "c:\\apps\\git\\bin\\git.exe", $git_location) | Set-Content -Path $git_script_location
          ((Get-Content -path $git_script_location -Raw) -replace "c:\\apps\\git\\bin\\tar.exe", $tar_location) | Set-Content -Path $git_script_location
          ((Get-Content -path $task_location -Raw) -replace ">> %LOG_FILE% 2<&1", "") | Set-Content -Path $task_location
          ((Get-Content -path $config_location -Raw) -replace "pgo=1", "pgo=0") | Set-Content -Path $config_location
      - name: build PHP
        run: |
          & C:\php-snap-build\php-sdk\phpsdk-vs16-${{ matrix.arch }}.bat -t C:\php-snap-build\rmtools\bin\snapshot_task.bat --task-args "php80 ${{ matrix.config }}"
      - name: Collect Artifacts
        run: |
          New-Item -ItemType "directory" -Path builds
          Get-ChildItem C:\php-snap-build\${{ matrix.target }}\* -Recurse -Include php-*.zip | Foreach-Object { Copy-Item -Path $_ -Destination .\builds }
          Copy-Item -Path C:\php-snap-build\rmtools\data\db\PHP-8.0.json -Destination .\builds\${{ matrix.config }}.json
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config }}
          path: builds
  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - run: mkdir builds
      - uses: actions/download-artifact@v2
        with:
          path: builds
      - name: Upload to bintray
        env:
          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
          BINTRAY_USER: shivammathur
          BINTRAY_REPO: php
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          VERSION='8.0'
          curl \
          --user "$BINTRAY_USER":"$BINTRAY_KEY" \
          --header "Content-Type: application/json" \
          --data " \
          {\"name\": \"$VERSION-windows\", \
           \"vcs_url\": \"$GITHUB_REPOSITORY\", \
           \"licenses\": [\"MIT\"], \
           \"public_download_numbers\": true, \
           \"public_stats\": true \
          }" \
            https://api.bintray.com/packages/"$BINTRAY_USER"/"$BINTRAY_REPO" || true
          mkdir uploads
          for file in ./builds/*/*; do
            mv $file ./uploads/
          done
          cd uploads || exit
          rm -rf *-src-*.zip || true
          for file in ./*; do
            curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -X DELETE https://api.bintray.com/content/"$BINTRAY_USER"/"$BINTRAY_REPO"/"$file" || true
            curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -T "$file" https://api.bintray.com/content/"$BINTRAY_USER"/"$BINTRAY_REPO"/"$VERSION"-windows/$VERSION/"$file" || true
          done
          curl --user "$BINTRAY_USER":"$BINTRAY_KEY" -X POST https://api.bintray.com/content/"$BINTRAY_USER"/"$BINTRAY_REPO"/"$VERSION"-windows/"$VERSION"/publish || true
