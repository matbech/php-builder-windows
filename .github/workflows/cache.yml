name: 'Cache PHP'
on:
  workflow_dispatch:
    inputs:
      php-versions:
        description: 'PHP version to cache'
        default: '5.3 5.4 5.5 5.6 7.0 7.1 7.2 7.3 7.4 8.0 8.1 8.2'
        required: false
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      php_matrix: ${{ steps.set-matrix.outputs.php_matrix }}
    steps:
      - name: Get matrix
        id: set-matrix
        run: |
          IFS=' ' read -r -a PHP_VERSIONS <<<"${{ github.event.inputs.php-versions }}"
          php_array=()
          for php in "${PHP_VERSIONS[@]}"; do
            php_array+=("{\"php\": \"$php\"}")
          done
          echo "php_matrix={\"include\":[$(echo "${php_array[@]}" | sed -e 's|} {|}, {|g')]}"
          echo "php_matrix={\"include\":[$(echo "${php_array[@]}" | sed -e 's|} {|}, {|g')]}" >> "$GITHUB_OUTPUT"
  cache:
    needs: get-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.get-matrix.outputs.php_matrix)}}
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create artifact directory
        run: mkdir builds
      - name: Fetch files
        run: bash scripts/fetch.sh ${{ matrix.php }} builds
      - name: Update release
        run: |
          set -x
          assets=()
          for asset in ./builds/*; do
            assets+=("$asset")
          done
          assets+=("./scripts/Get-PhpNightly.ps1")
          assets+=("./scripts/Get-Php.ps1")
          for release in php${{ matrix.php }}; do
            if ! gh release view "$release"; then
              gh release create "$release" "${assets[@]}" -t "$release" -n "$release"
            else
              gh release upload "$release" "${assets[@]}" --clobber
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
